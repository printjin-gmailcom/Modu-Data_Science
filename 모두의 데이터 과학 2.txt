
str 클래스

- lower(), upper(), capitalize(), predicate():해당 문자열이 특정 클래스에 속하는지 여부, islower(), isupper(), isspace()

- 디코딩 ; bin.decode():바이너리 배열을 문자 배열로 변환, s.encode():문자배열을 바이너리 배열로 변환

- lstrip(), rstrip():왼쪽/오른쪽 공백 제거

- split(), join(), find()



데이터 컬렉션 - 리스트, 튜플, 셋, 딕셔너리



zip(x,y)



f.read() #모든 데이터를 문자열이나 바이너리 형태로 읽는다

f.read(n) #첫 번째 n개의 바이트를 문자열이나 바이너리 형태로 읽는다

f.readline() #다음 줄을 문자열로 읽는다

fr.eeadlines() # 모든 줄을 문자열 리스트로 읽는다

f.write(line) # 문자열이나 바이너리를 기록한다

f.writelines(lines) # 문자열 리스트를 기록한다



parse.urlparse(URL)

# 스키마, 네트워크 주소, 파일 시스템 경로, 파라미터, 쿼리, 프래그먼트 출력



정규 표현식 언어

기본 연산자 - .:개행문자를 제외한 모든 문자 a:문자 a ab:문자열 ab x|y:x나 y \y:특수문자 y를 이스케이프

캐릭터 클래스 - [a-d]:a~d 중 문자 1개 [^a-d]:a~d를 제외한 문자 1개 \d:숫자 1개 \D:숫자가 아닌 개채 1개 \s:공백 1개 \S:공백이 아닌 개체 1개 \w:알파벳 또는 숫자 1개 \W:알파벳과 숫자가 아닌 개체 1개

양적 연산자 - x*:0개 이상의 x x+:1개 이상의 x x?:0이나 1개인 x x{2}:x가 정확히 2개 x{2,5}:x가 2개에서 5개 사이

이스케이프 문자 - \n:새로운 줄 \r:현재 줄의 맨 앞 \t:탭

위치 지정 - ^:문자열의 처음 \b:단어 경계 \B:비단어 경계 $:문자열의 끝

그룹 - (x):캡처링 그룹 (?:x):비캡처링 그룹




